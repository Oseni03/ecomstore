# Generated by Django 4.1.1 on 2022-10-04 10:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required max-255",
                        max_length=255,
                        unique=True,
                        verbose_name="product attribute name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="format: required",
                        verbose_name="product attribute description",
                    ),
                ),
            ],
            options={
                "verbose_name": "product attribute",
                "verbose_name_plural": "product attributes",
            },
        ),
        migrations.CreateModel(
            name="AttributeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "value",
                    models.CharField(
                        help_text="format: required max-255",
                        max_length=255,
                        verbose_name="product value",
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="values",
                        to="store.attribute",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required max-255",
                        max_length=255,
                        unique=True,
                        verbose_name="brand name",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required max-100",
                        max_length=100,
                        verbose_name="category name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="format: required letters, numbers, underscore or hyphen",
                        max_length=150,
                        verbose_name="category safe url",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        help_text="format: not required",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="store.category",
                        verbose_name="parent of category",
                    ),
                ),
            ],
            options={
                "verbose_name": "product category",
                "verbose_name_plural": "product categories",
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "sku",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="stock keeping unit",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required max-255",
                        max_length=255,
                        verbose_name="product name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="format: required letters, numbers, underscore or hyphen",
                        max_length=255,
                        verbose_name="product safe url",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="format: required", verbose_name="product description"
                    ),
                ),
                (
                    "store_price",
                    models.DecimalField(
                        decimal_places=2,
                        error_messages={
                            "name": {
                                "max_length": "the price must be between 0 and 999.99."
                            }
                        },
                        help_text="format: maximum price 999.99",
                        max_digits=5,
                        verbose_name="regular store price",
                    ),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        decimal_places=2,
                        error_messages={
                            "name": {
                                "max_length": "the price must be between 0 and 999.99."
                            }
                        },
                        help_text="format: maximum price 999.99",
                        max_digits=5,
                        verbose_name="sale price",
                    ),
                ),
                (
                    "discount_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        error_messages={
                            "name": {
                                "max_length": "the price must be between 0 and 999.99."
                            }
                        },
                        help_text="format: maximum price 999.99",
                        max_digits=5,
                        null=True,
                        verbose_name="discount price",
                    ),
                ),
                (
                    "weight",
                    models.FloatField(blank=True, verbose_name="product weight"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                ("is_bestseller", models.BooleanField(default=False)),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: y-m-d H:M:S",
                        verbose_name="date product created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: y-m-d H:M:S",
                        verbose_name="date product updated",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Products",
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="ProductType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="format: required max-255",
                        max_length=255,
                        unique=True,
                        verbose_name="product type",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_checked",
                    models.DateTimeField(
                        blank=True,
                        editable=False,
                        help_text="format: blank-True, null-True",
                        null=True,
                        verbose_name="product stock check date",
                    ),
                ),
                (
                    "units",
                    models.IntegerField(
                        default=0,
                        help_text="format: required, default-0",
                        verbose_name="units/qty of stock",
                    ),
                ),
                (
                    "units_sold",
                    models.IntegerField(
                        default=0,
                        help_text="format: required, default-0",
                        verbose_name="units sold till date",
                    ),
                ),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="stock",
                        to="store.product",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Stock",
            },
        ),
        migrations.CreateModel(
            name="ProductTypeAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="product_types",
                        to="store.attribute",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.RESTRICT,
                        related_name="type_attributes",
                        to="store.producttype",
                    ),
                ),
            ],
            options={
                "unique_together": {("attribute", "type")},
            },
        ),
        migrations.AddField(
            model_name="producttype",
            name="attributes",
            field=models.ManyToManyField(
                related_name="product_type",
                through="store.ProductTypeAttribute",
                to="store.attribute",
            ),
        ),
        migrations.CreateModel(
            name="ProductAttributeValues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attributevalues",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="attribute_values",
                        to="store.attributevalue",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="product_attributevalues",
                        to="store.product",
                    ),
                ),
            ],
            options={
                "unique_together": {("attributevalues", "product")},
            },
        ),
        migrations.AddField(
            model_name="product",
            name="attribute_values",
            field=models.ManyToManyField(
                related_name="products",
                through="store.ProductAttributeValues",
                to="store.attributevalue",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="brand",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="store.brand",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="category",
            field=mptt.fields.TreeManyToManyField(
                related_name="products", to="store.category"
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="product_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="products",
                to="store.producttype",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="wish_list",
            field=models.ManyToManyField(
                blank=True, related_name="products", to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Media",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        help_text="format: required",
                        upload_to="products/",
                        verbose_name="product image",
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(
                        help_text="format: required, max_length-255",
                        max_length=255,
                        verbose_name="alternate text",
                    ),
                ),
                (
                    "is_feature",
                    models.BooleanField(
                        default=False,
                        help_text="format: default=false, true=default image",
                        verbose_name="product default image",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="format: y-m-d H:M:S",
                        verbose_name="date product image created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="format: y-m-d H:M:S",
                        verbose_name="date product image updated",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="store.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "product image",
                "verbose_name_plural": "product images",
            },
        ),
    ]
